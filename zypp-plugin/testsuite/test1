#!/bin/bash
set -e
set -u
#set -x

MYDIR=$(dirname $0)

runit() {
    local STRACE=""
    # STRACE="strace -efile"

    SNAPPER_ZYPP_PLUGIN_CONFIG=$MYDIR/../../data/zypp-plugin.conf \
      SNAPPER_ZYPP_PLUGIN_SNAPPER_CONFIG=testsuite \
      SNAPPER_ZYPP_PLUGIN_DBUS_SESSION=1 \
      DEBUG=1 \
      $STRACE \
      $MYDIR/../snapper-zypp-plugin
}

stomp_message() {
    local COMMAND="$1"
    local HEADERS="$2"
    local BODY="$3"
    printf '%s\n%s\n\n%s\0' "$COMMAND" "$HEADERS" "$BODY"
}

JSON='{
  "TransactionStepList": [
    {
      "type": "...",
      "stage": "...",
      "solvable": {
        "n": "mypackage"
      }
    }
  ]
}'

test_pre_post() {
    stomp_message PLUGINBEGIN "" ""
    stomp_message COMMITBEGIN "" "$JSON"
    stomp_message COMMITEND "" "$JSON"
    stomp_message PLUGINEND "" ""
}

test_pre_del() {
    stomp_message PLUGINBEGIN "" ""
    stomp_message COMMITBEGIN "" "$JSON"
    stomp_message COMMITEND "" ""
    stomp_message PLUGINEND "" ""
}

setup() {
    $MYDIR/mock-snapperd &
    sleep 1
    PID=$!
    trap "kill \$PID" EXIT TERM INT
}
teardown() {
    :
}

# FIXME: run this automatically, and declare the ruby-dbus dependency
# FIXME: add tests for unhappy paths
# FIXME: is exit code 0 really a success?
# FIXME: try with coverage testing

setup
# test1 | tee /dev/stderr | runit >&2
test_pre_post | runit > /dev/null
test_pre_del | runit > /dev/null
teardown
